//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Daw.Services.WindowsService
{
    
    
    /// <summary>
    /// The SchedulerConfigSection Configuration Section.
    /// </summary>
    public partial class SchedulerConfigSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SchedulerConfigSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SchedulerConfigSectionSectionName = "schedulerConfigSection";
        
        /// <summary>
        /// The XML path of the SchedulerConfigSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SchedulerConfigSectionSectionPath = "schedulerConfigSection";
        
        /// <summary>
        /// Gets the SchedulerConfigSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Daw.Services.WindowsService.SchedulerConfigSection Instance
        {
            get
            {
                return ((global::Daw.Services.WindowsService.SchedulerConfigSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Daw.Services.WindowsService.SchedulerConfigSection.SchedulerConfigSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.SchedulerConfigSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Daw.Services.WindowsService.SchedulerConfigSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Schedules Property
        /// <summary>
        /// The XML name of the <see cref="Schedules"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SchedulesPropertyName = "schedules";
        
        /// <summary>
        /// Gets or sets the Schedules.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Schedules.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.SchedulerConfigSection.SchedulesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Daw.Services.WindowsService.Schedules Schedules
        {
            get
            {
                return ((global::Daw.Services.WindowsService.Schedules)(base[global::Daw.Services.WindowsService.SchedulerConfigSection.SchedulesPropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.SchedulerConfigSection.SchedulesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Daw.Services.WindowsService
{
    
    
    /// <summary>
    /// A collection of ScheduleConfigItem instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Daw.Services.WindowsService.ScheduleConfigItem), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Daw.Services.WindowsService.Schedules.ScheduleConfigItemPropertyName)]
    public partial class Schedules : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ScheduleConfigItemPropertyName = "scheduleConfigItem";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Daw.Services.WindowsService.Schedules.ScheduleConfigItemPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Daw.Services.WindowsService.Schedules.ScheduleConfigItemPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Daw.Services.WindowsService.ScheduleConfigItem)(element)).index;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Daw.Services.WindowsService.ScheduleConfigItem();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Daw.Services.WindowsService.ScheduleConfigItem this[int index]
        {
            get
            {
                return ((global::Daw.Services.WindowsService.ScheduleConfigItem)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> with the specified key.
        /// </summary>
        /// <param name="index">The key of the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Daw.Services.WindowsService.ScheduleConfigItem this[object index]
        {
            get
            {
                return ((global::Daw.Services.WindowsService.ScheduleConfigItem)(base.BaseGet(index)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="scheduleConfigItem">The <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Daw.Services.WindowsService.ScheduleConfigItem scheduleConfigItem)
        {
            base.BaseAdd(scheduleConfigItem);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="scheduleConfigItem">The <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Daw.Services.WindowsService.ScheduleConfigItem scheduleConfigItem)
        {
            base.BaseRemove(this.GetElementKey(scheduleConfigItem));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Daw.Services.WindowsService.ScheduleConfigItem GetItemAt(int index)
        {
            return ((global::Daw.Services.WindowsService.ScheduleConfigItem)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> with the specified key.
        /// </summary>
        /// <param name="index">The key of the <see cref="global::Daw.Services.WindowsService.ScheduleConfigItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Daw.Services.WindowsService.ScheduleConfigItem GetItemByKey(int index)
        {
            return ((global::Daw.Services.WindowsService.ScheduleConfigItem)(base.BaseGet(((object)(index)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region name Property
        /// <summary>
        /// The XML name of the <see cref="name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string namePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.Schedules.namePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string name
        {
            get
            {
                return ((string)(base[global::Daw.Services.WindowsService.Schedules.namePropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.Schedules.namePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Daw.Services.WindowsService
{
    
    
    /// <summary>
    /// The ScheduleConfigItem Configuration Element.
    /// </summary>
    public partial class ScheduleConfigItem : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region name Property
        /// <summary>
        /// The XML name of the <see cref="name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string namePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.namePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string name
        {
            get
            {
                return ((string)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.namePropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.namePropertyName] = value;
            }
        }
        #endregion
        
        #region url Property
        /// <summary>
        /// The XML name of the <see cref="url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string urlPropertyName = "url";
        
        /// <summary>
        /// Gets or sets the url.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The url.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.urlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string url
        {
            get
            {
                return ((string)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.urlPropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.urlPropertyName] = value;
            }
        }
        #endregion
        
        #region intervalsecs Property
        /// <summary>
        /// The XML name of the <see cref="intervalsecs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string intervalsecsPropertyName = "intervalsecs";
        
        /// <summary>
        /// Gets or sets the intervalsecs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The intervalsecs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.intervalsecsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int intervalsecs
        {
            get
            {
                return ((int)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.intervalsecsPropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.intervalsecsPropertyName] = value;
            }
        }
        #endregion
        
        #region bookie Property
        /// <summary>
        /// The XML name of the <see cref="bookie"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string bookiePropertyName = "bookie";
        
        /// <summary>
        /// Gets or sets the bookie.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The bookie.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.bookiePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string bookie
        {
            get
            {
                return ((string)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.bookiePropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.bookiePropertyName] = value;
            }
        }
        #endregion
        
        #region sport Property
        /// <summary>
        /// The XML name of the <see cref="sport"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string sportPropertyName = "sport";
        
        /// <summary>
        /// Gets or sets the sport.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The sport.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.sportPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string sport
        {
            get
            {
                return ((string)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.sportPropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.sportPropertyName] = value;
            }
        }
        #endregion
        
        #region type Property
        /// <summary>
        /// The XML name of the <see cref="type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string typePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.typePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string type
        {
            get
            {
                return ((string)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.typePropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.typePropertyName] = value;
            }
        }
        #endregion
        
        #region enabled Property
        /// <summary>
        /// The XML name of the <see cref="enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string enabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.enabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool enabled
        {
            get
            {
                return ((bool)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.enabledPropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.enabledPropertyName] = value;
            }
        }
        #endregion
        
        #region index Property
        /// <summary>
        /// The XML name of the <see cref="index"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string indexPropertyName = "index";
        
        /// <summary>
        /// Gets or sets the index.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The index.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Daw.Services.WindowsService.ScheduleConfigItem.indexPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual int index
        {
            get
            {
                return ((int)(base[global::Daw.Services.WindowsService.ScheduleConfigItem.indexPropertyName]));
            }
            set
            {
                base[global::Daw.Services.WindowsService.ScheduleConfigItem.indexPropertyName] = value;
            }
        }
        #endregion
    }
}
